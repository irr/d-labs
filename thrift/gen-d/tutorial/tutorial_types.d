/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
module tutorial.tutorial_types;

import thrift.base;
import thrift.codegen.base;
import thrift.util.hashset;

import share.shared_types;

enum Operation {
  ADD = 1,
  SUBTRACT = 2,
  MULTIPLY = 3,
  DIVIDE = 4
}

alias int MyInteger;

struct Work {
  int num1;
  int num2;
  Operation op;
  string comment;
  
  mixin TStructHelpers!([
    TFieldMeta(`num1`, 1, TReq.OPT_IN_REQ_OUT, q{0}),
    TFieldMeta(`num2`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`op`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`comment`, 4, TReq.OPTIONAL)
  ]);
}

class InvalidOperation : TException {
  int what;
  string why;
  
  mixin TStructHelpers!([
    TFieldMeta(`what`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`why`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

